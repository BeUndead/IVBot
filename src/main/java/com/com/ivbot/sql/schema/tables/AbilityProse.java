/**
 * This class is generated by jOOQ
 */
package com.com.ivbot.sql.schema.tables;

import com.com.ivbot.sql.schema.DefaultSchema;
import com.com.ivbot.sql.schema.Keys;
import com.com.ivbot.sql.schema.tables.records.AbilityProseRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;

/**
 * This class is generated by jOOQ.
 */
@Generated (
        value = {
                "http://www.jooq.org", "jOOQ version:3.6.2"},
        comments = "This class is generated by jOOQ")
@SuppressWarnings ({"all", "unchecked", "rawtypes"})
public class AbilityProse extends TableImpl<AbilityProseRecord> {

    /**
     * The reference instance of {@code ability_prose}
     */
    public static final AbilityProse ABILITY_PROSE = new AbilityProse();
    private static final long serialVersionUID = -1911178104;
    /**
     * The column {@code ability_prose.ability_id}.
     */
    public final TableField<AbilityProseRecord, Integer> ABILITY_ID =
            createField("ability_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");
    /**
     * The column {@code ability_prose.local_language_id}.
     */
    public final TableField<AbilityProseRecord, Integer> LOCAL_LANGUAGE_ID =
            createField("local_language_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");
    /**
     * The column {@code ability_prose.short_effect}.
     */
    public final TableField<AbilityProseRecord, String> SHORT_EFFECT =
            createField("short_effect", org.jooq.impl.SQLDataType.CLOB, this, "");
    /**
     * The column {@code ability_prose.effect}.
     */
    public final TableField<AbilityProseRecord, String> EFFECT =
            createField("effect", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a {@code ability_prose} table reference
     */
    public AbilityProse() {
        this("ability_prose", null);
    }

    private AbilityProse(String alias, Table<AbilityProseRecord> aliased) {
        this(alias, aliased, null);
    }

    private AbilityProse(String alias, Table<AbilityProseRecord> aliased, Field<?>[] parameters) {
        super(alias, DefaultSchema.DEFAULT_SCHEMA, aliased, parameters, "");
    }

    /**
     * Create an aliased {@code ability_prose} table reference
     */
    public AbilityProse(String alias) {
        this(alias, ABILITY_PROSE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AbilityProseRecord> getPrimaryKey() {
        return Keys.PK_ABILITY_PROSE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AbilityProseRecord>> getKeys() {
        return Arrays.<UniqueKey<AbilityProseRecord>>asList(Keys.PK_ABILITY_PROSE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<AbilityProseRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<AbilityProseRecord, ?>>asList(Keys.FK_ABILITY_PROSE_ABILITIES_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AbilityProse as(String alias) {
        return new AbilityProse(alias, this);
    }

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AbilityProseRecord> getRecordType() {
        return AbilityProseRecord.class;
    }

    /**
     * Rename this table
     */
    public AbilityProse rename(String name) {
        return new AbilityProse(name, null);
    }
}
