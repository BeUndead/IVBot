/**
 * This class is generated by jOOQ
 */
package com.com.ivbot.sql.schema.tables;

import com.com.ivbot.sql.schema.DefaultSchema;
import com.com.ivbot.sql.schema.Keys;
import com.com.ivbot.sql.schema.tables.records.MovesRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;

/**
 * This class is generated by jOOQ.
 */
@Generated (
        value = {
                "http://www.jooq.org", "jOOQ version:3.6.2"},
        comments = "This class is generated by jOOQ")
@SuppressWarnings ({"all", "unchecked", "rawtypes"})
public class Moves extends TableImpl<MovesRecord> {

    /**
     * The reference instance of {@code moves}
     */
    public static final Moves MOVES = new Moves();
    private static final long serialVersionUID = -1497680953;
    /**
     * The column {@code moves.id}.
     */
    public final TableField<MovesRecord, Integer> ID =
            createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");
    /**
     * The column {@code moves.identifier}.
     */
    public final TableField<MovesRecord, String> IDENTIFIER =
            createField("identifier", org.jooq.impl.SQLDataType.VARCHAR.length(79).nullable(false), this, "");
    /**
     * The column {@code moves.generation_id}.
     */
    public final TableField<MovesRecord, Integer> GENERATION_ID =
            createField("generation_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");
    /**
     * The column {@code moves.type_id}.
     */
    public final TableField<MovesRecord, Integer> TYPE_ID =
            createField("type_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");
    /**
     * The column {@code moves.power}.
     */
    public final TableField<MovesRecord, Short> POWER =
            createField("power", org.jooq.impl.SQLDataType.SMALLINT, this, "");
    /**
     * The column {@code moves.pp}.
     */
    public final TableField<MovesRecord, Short> PP = createField("pp", org.jooq.impl.SQLDataType.SMALLINT, this, "");
    /**
     * The column {@code moves.accuracy}.
     */
    public final TableField<MovesRecord, Short> ACCURACY =
            createField("accuracy", org.jooq.impl.SQLDataType.SMALLINT, this, "");
    /**
     * The column {@code moves.priority}.
     */
    public final TableField<MovesRecord, Short> PRIORITY =
            createField("priority", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");
    /**
     * The column {@code moves.target_id}.
     */
    public final TableField<MovesRecord, Integer> TARGET_ID =
            createField("target_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");
    /**
     * The column {@code moves.damage_class_id}.
     */
    public final TableField<MovesRecord, Integer> DAMAGE_CLASS_ID =
            createField("damage_class_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");
    /**
     * The column {@code moves.effect_id}.
     */
    public final TableField<MovesRecord, Integer> EFFECT_ID =
            createField("effect_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");
    /**
     * The column {@code moves.effect_chance}.
     */
    public final TableField<MovesRecord, Integer> EFFECT_CHANCE =
            createField("effect_chance", org.jooq.impl.SQLDataType.INTEGER, this, "");
    /**
     * The column {@code moves.contest_type_id}.
     */
    public final TableField<MovesRecord, Integer> CONTEST_TYPE_ID =
            createField("contest_type_id", org.jooq.impl.SQLDataType.INTEGER, this, "");
    /**
     * The column {@code moves.contest_effect_id}.
     */
    public final TableField<MovesRecord, Integer> CONTEST_EFFECT_ID =
            createField("contest_effect_id", org.jooq.impl.SQLDataType.INTEGER, this, "");
    /**
     * The column {@code moves.super_contest_effect_id}.
     */
    public final TableField<MovesRecord, Integer> SUPER_CONTEST_EFFECT_ID =
            createField("super_contest_effect_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a {@code moves} table reference
     */
    public Moves() {
        this("moves", null);
    }

    private Moves(String alias, Table<MovesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Moves(String alias, Table<MovesRecord> aliased, Field<?>[] parameters) {
        super(alias, DefaultSchema.DEFAULT_SCHEMA, aliased, parameters, "");
    }

    /**
     * Create an aliased {@code moves} table reference
     */
    public Moves(String alias) {
        this(alias, MOVES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MovesRecord> getPrimaryKey() {
        return Keys.PK_MOVES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MovesRecord>> getKeys() {
        return Arrays.<UniqueKey<MovesRecord>>asList(Keys.PK_MOVES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<MovesRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<MovesRecord, ?>>asList(Keys.FK_MOVES_GENERATIONS_1, Keys.FK_MOVES_TYPES_1,
                                                         Keys.FK_MOVES_MOVE_TARGETS_1,
                                                         Keys.FK_MOVES_MOVE_DAMAGE_CLASSES_1,
                                                         Keys.FK_MOVES_MOVE_EFFECTS_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Moves as(String alias) {
        return new Moves(alias, this);
    }

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MovesRecord> getRecordType() {
        return MovesRecord.class;
    }

    /**
     * Rename this table
     */
    public Moves rename(String name) {
        return new Moves(name, null);
    }
}
