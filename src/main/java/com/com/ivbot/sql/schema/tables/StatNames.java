/**
 * This class is generated by jOOQ
 */
package com.com.ivbot.sql.schema.tables;

import com.com.ivbot.sql.schema.DefaultSchema;
import com.com.ivbot.sql.schema.Keys;
import com.com.ivbot.sql.schema.tables.records.StatNamesRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;

/**
 * This class is generated by jOOQ.
 */
@Generated (
        value = {
                "http://www.jooq.org", "jOOQ version:3.6.2"},
        comments = "This class is generated by jOOQ")
@SuppressWarnings ({"all", "unchecked", "rawtypes"})
public class StatNames extends TableImpl<StatNamesRecord> {

    /**
     * The reference instance of {@code stat_names}
     */
    public static final StatNames STAT_NAMES = new StatNames();
    private static final long serialVersionUID = 1434638421;
    /**
     * The column {@code stat_names.stat_id}.
     */
    public final TableField<StatNamesRecord, Integer> STAT_ID =
            createField("stat_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");
    /**
     * The column {@code stat_names.local_language_id}.
     */
    public final TableField<StatNamesRecord, Integer> LOCAL_LANGUAGE_ID =
            createField("local_language_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");
    /**
     * The column {@code stat_names.name}.
     */
    public final TableField<StatNamesRecord, String> NAME =
            createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(79).nullable(false), this, "");

    /**
     * Create a {@code stat_names} table reference
     */
    public StatNames() {
        this("stat_names", null);
    }

    private StatNames(String alias, Table<StatNamesRecord> aliased) {
        this(alias, aliased, null);
    }

    private StatNames(String alias, Table<StatNamesRecord> aliased, Field<?>[] parameters) {
        super(alias, DefaultSchema.DEFAULT_SCHEMA, aliased, parameters, "");
    }

    /**
     * Create an aliased {@code stat_names} table reference
     */
    public StatNames(String alias) {
        this(alias, STAT_NAMES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<StatNamesRecord> getPrimaryKey() {
        return Keys.PK_STAT_NAMES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<StatNamesRecord>> getKeys() {
        return Arrays.<UniqueKey<StatNamesRecord>>asList(Keys.PK_STAT_NAMES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<StatNamesRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<StatNamesRecord, ?>>asList(Keys.FK_STAT_NAMES_STATS_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StatNames as(String alias) {
        return new StatNames(alias, this);
    }

    /**
     * The class holding records for this type
     */
    @Override
    public Class<StatNamesRecord> getRecordType() {
        return StatNamesRecord.class;
    }

    /**
     * Rename this table
     */
    public StatNames rename(String name) {
        return new StatNames(name, null);
    }
}
