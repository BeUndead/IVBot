/**
 * This class is generated by jOOQ
 */
package com.com.ivbot.sql.schema.tables;

import com.com.ivbot.sql.schema.DefaultSchema;
import com.com.ivbot.sql.schema.Keys;
import com.com.ivbot.sql.schema.tables.records.ItemNamesRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;

/**
 * This class is generated by jOOQ.
 */
@Generated (
        value = {
                "http://www.jooq.org", "jOOQ version:3.6.2"},
        comments = "This class is generated by jOOQ")
@SuppressWarnings ({"all", "unchecked", "rawtypes"})
public class ItemNames extends TableImpl<ItemNamesRecord> {

    /**
     * The reference instance of {@code item_names}
     */
    public static final ItemNames ITEM_NAMES = new ItemNames();
    private static final long serialVersionUID = -1517707312;
    /**
     * The column {@code item_names.item_id}.
     */
    public final TableField<ItemNamesRecord, Integer> ITEM_ID =
            createField("item_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");
    /**
     * The column {@code item_names.local_language_id}.
     */
    public final TableField<ItemNamesRecord, Integer> LOCAL_LANGUAGE_ID =
            createField("local_language_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");
    /**
     * The column {@code item_names.name}.
     */
    public final TableField<ItemNamesRecord, String> NAME =
            createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(79).nullable(false), this, "");

    /**
     * Create a {@code item_names} table reference
     */
    public ItemNames() {
        this("item_names", null);
    }

    private ItemNames(String alias, Table<ItemNamesRecord> aliased) {
        this(alias, aliased, null);
    }

    private ItemNames(String alias, Table<ItemNamesRecord> aliased, Field<?>[] parameters) {
        super(alias, DefaultSchema.DEFAULT_SCHEMA, aliased, parameters, "");
    }

    /**
     * Create an aliased {@code item_names} table reference
     */
    public ItemNames(String alias) {
        this(alias, ITEM_NAMES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ItemNamesRecord> getPrimaryKey() {
        return Keys.PK_ITEM_NAMES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ItemNamesRecord>> getKeys() {
        return Arrays.<UniqueKey<ItemNamesRecord>>asList(Keys.PK_ITEM_NAMES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ItemNamesRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ItemNamesRecord, ?>>asList(Keys.FK_ITEM_NAMES_ITEMS_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ItemNames as(String alias) {
        return new ItemNames(alias, this);
    }

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ItemNamesRecord> getRecordType() {
        return ItemNamesRecord.class;
    }

    /**
     * Rename this table
     */
    public ItemNames rename(String name) {
        return new ItemNames(name, null);
    }
}
