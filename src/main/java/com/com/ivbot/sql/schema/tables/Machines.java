/**
 * This class is generated by jOOQ
 */
package com.com.ivbot.sql.schema.tables;

import com.com.ivbot.sql.schema.DefaultSchema;
import com.com.ivbot.sql.schema.Keys;
import com.com.ivbot.sql.schema.tables.records.MachinesRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;

/**
 * This class is generated by jOOQ.
 */
@Generated (
        value = {
                "http://www.jooq.org", "jOOQ version:3.6.2"},
        comments = "This class is generated by jOOQ")
@SuppressWarnings ({"all", "unchecked", "rawtypes"})
public class Machines extends TableImpl<MachinesRecord> {

    /**
     * The reference instance of {@code machines}
     */
    public static final Machines MACHINES = new Machines();
    private static final long serialVersionUID = -1292278257;
    /**
     * The column {@code machines.machine_number}.
     */
    public final TableField<MachinesRecord, Integer> MACHINE_NUMBER =
            createField("machine_number", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");
    /**
     * The column {@code machines.version_group_id}.
     */
    public final TableField<MachinesRecord, Integer> VERSION_GROUP_ID =
            createField("version_group_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");
    /**
     * The column {@code machines.item_id}.
     */
    public final TableField<MachinesRecord, Integer> ITEM_ID =
            createField("item_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");
    /**
     * The column {@code machines.move_id}.
     */
    public final TableField<MachinesRecord, Integer> MOVE_ID =
            createField("move_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a {@code machines} table reference
     */
    public Machines() {
        this("machines", null);
    }

    private Machines(String alias, Table<MachinesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Machines(String alias, Table<MachinesRecord> aliased, Field<?>[] parameters) {
        super(alias, DefaultSchema.DEFAULT_SCHEMA, aliased, parameters, "");
    }

    /**
     * Create an aliased {@code machines} table reference
     */
    public Machines(String alias) {
        this(alias, MACHINES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MachinesRecord> getPrimaryKey() {
        return Keys.PK_MACHINES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MachinesRecord>> getKeys() {
        return Arrays.<UniqueKey<MachinesRecord>>asList(Keys.PK_MACHINES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<MachinesRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<MachinesRecord, ?>>asList(Keys.FK_MACHINES_VERSION_GROUPS_1, Keys.FK_MACHINES_ITEMS_1,
                                                            Keys.FK_MACHINES_MOVES_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Machines as(String alias) {
        return new Machines(alias, this);
    }

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MachinesRecord> getRecordType() {
        return MachinesRecord.class;
    }

    /**
     * Rename this table
     */
    public Machines rename(String name) {
        return new Machines(name, null);
    }
}
