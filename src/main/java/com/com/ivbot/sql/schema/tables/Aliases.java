/**
 * This class is generated by jOOQ
 */
package com.com.ivbot.sql.schema.tables;

import com.com.ivbot.sql.schema.DefaultSchema;
import com.com.ivbot.sql.schema.Keys;
import com.com.ivbot.sql.schema.tables.records.AliasesRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;

/**
 * This class is generated by jOOQ.
 */
@Generated (
        value = {
                "http://www.jooq.org", "jOOQ version:3.6.2"},
        comments = "This class is generated by jOOQ")
@SuppressWarnings ({"all", "unchecked", "rawtypes"})
public class Aliases extends TableImpl<AliasesRecord> {

    /**
     * The reference instance of {@code aliases}
     */
    public static final Aliases ALIASES = new Aliases();
    private static final long serialVersionUID = 873127786;
    /**
     * The column {@code aliases.id}.
     */
    public final TableField<AliasesRecord, Integer> ID =
            createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");
    /**
     * The column {@code aliases.pokemon_id}.
     */
    public final TableField<AliasesRecord, Integer> POKEMON_ID =
            createField("pokemon_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");
    /**
     * The column {@code aliases.name}.
     */
    public final TableField<AliasesRecord, String> NAME =
            createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(30).nullable(false), this, "");

    /**
     * Create a {@code aliases} table reference
     */
    public Aliases() {
        this("aliases", null);
    }

    private Aliases(String alias, Table<AliasesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Aliases(String alias, Table<AliasesRecord> aliased, Field<?>[] parameters) {
        super(alias, DefaultSchema.DEFAULT_SCHEMA, aliased, parameters, "");
    }

    /**
     * Create an aliased {@code aliases} table reference
     */
    public Aliases(String alias) {
        this(alias, ALIASES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<AliasesRecord, Integer> getIdentity() {
        return Keys.IDENTITY_ALIASES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AliasesRecord> getPrimaryKey() {
        return Keys.PK_ALIASES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AliasesRecord>> getKeys() {
        return Arrays.<UniqueKey<AliasesRecord>>asList(Keys.PK_ALIASES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Aliases as(String alias) {
        return new Aliases(alias, this);
    }

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AliasesRecord> getRecordType() {
        return AliasesRecord.class;
    }

    /**
     * Rename this table
     */
    public Aliases rename(String name) {
        return new Aliases(name, null);
    }
}
