/**
 * This class is generated by jOOQ
 */
package com.com.ivbot.sql.schema.tables;

import com.com.ivbot.sql.schema.DefaultSchema;
import com.com.ivbot.sql.schema.Keys;
import com.com.ivbot.sql.schema.tables.records.EvolutionTriggerProseRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;

/**
 * This class is generated by jOOQ.
 */
@Generated (
        value = {
                "http://www.jooq.org", "jOOQ version:3.6.2"},
        comments = "This class is generated by jOOQ")
@SuppressWarnings ({"all", "unchecked", "rawtypes"})
public class EvolutionTriggerProse extends TableImpl<EvolutionTriggerProseRecord> {

    /**
     * The reference instance of {@code evolution_trigger_prose}
     */
    public static final EvolutionTriggerProse EVOLUTION_TRIGGER_PROSE = new EvolutionTriggerProse();
    private static final long serialVersionUID = 1505203051;
    /**
     * The column {@code evolution_trigger_prose.evolution_trigger_id}.
     */
    public final TableField<EvolutionTriggerProseRecord, Integer> EVOLUTION_TRIGGER_ID =
            createField("evolution_trigger_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");
    /**
     * The column {@code evolution_trigger_prose.local_language_id}.
     */
    public final TableField<EvolutionTriggerProseRecord, Integer> LOCAL_LANGUAGE_ID =
            createField("local_language_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");
    /**
     * The column {@code evolution_trigger_prose.name}.
     */
    public final TableField<EvolutionTriggerProseRecord, String> NAME =
            createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(79).nullable(false), this, "");

    /**
     * Create a {@code evolution_trigger_prose} table reference
     */
    public EvolutionTriggerProse() {
        this("evolution_trigger_prose", null);
    }

    private EvolutionTriggerProse(String alias, Table<EvolutionTriggerProseRecord> aliased) {
        this(alias, aliased, null);
    }

    private EvolutionTriggerProse(String alias, Table<EvolutionTriggerProseRecord> aliased, Field<?>[] parameters) {
        super(alias, DefaultSchema.DEFAULT_SCHEMA, aliased, parameters, "");
    }

    /**
     * Create an aliased {@code evolution_trigger_prose} table reference
     */
    public EvolutionTriggerProse(String alias) {
        this(alias, EVOLUTION_TRIGGER_PROSE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<EvolutionTriggerProseRecord> getPrimaryKey() {
        return Keys.PK_EVOLUTION_TRIGGER_PROSE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<EvolutionTriggerProseRecord>> getKeys() {
        return Arrays.<UniqueKey<EvolutionTriggerProseRecord>>asList(Keys.PK_EVOLUTION_TRIGGER_PROSE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<EvolutionTriggerProseRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<EvolutionTriggerProseRecord, ?>>asList(
                Keys.FK_EVOLUTION_TRIGGER_PROSE_EVOLUTION_TRIGGERS_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EvolutionTriggerProse as(String alias) {
        return new EvolutionTriggerProse(alias, this);
    }

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EvolutionTriggerProseRecord> getRecordType() {
        return EvolutionTriggerProseRecord.class;
    }

    /**
     * Rename this table
     */
    public EvolutionTriggerProse rename(String name) {
        return new EvolutionTriggerProse(name, null);
    }
}
