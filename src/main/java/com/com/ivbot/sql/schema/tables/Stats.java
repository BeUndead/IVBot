/**
 * This class is generated by jOOQ
 */
package com.com.ivbot.sql.schema.tables;

import com.com.ivbot.sql.schema.DefaultSchema;
import com.com.ivbot.sql.schema.Keys;
import com.com.ivbot.sql.schema.tables.records.StatsRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;

/**
 * This class is generated by jOOQ.
 */
@Generated (
        value = {
                "http://www.jooq.org", "jOOQ version:3.6.2"},
        comments = "This class is generated by jOOQ")
@SuppressWarnings ({"all", "unchecked", "rawtypes"})
public class Stats extends TableImpl<StatsRecord> {

    /**
     * The reference instance of {@code stats}
     */
    public static final Stats STATS = new Stats();
    private static final long serialVersionUID = -2022468825;
    /**
     * The column {@code stats.id}.
     */
    public final TableField<StatsRecord, Integer> ID =
            createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");
    /**
     * The column {@code stats.damage_class_id}.
     */
    public final TableField<StatsRecord, Integer> DAMAGE_CLASS_ID =
            createField("damage_class_id", org.jooq.impl.SQLDataType.INTEGER, this, "");
    /**
     * The column {@code stats.identifier}.
     */
    public final TableField<StatsRecord, String> IDENTIFIER =
            createField("identifier", org.jooq.impl.SQLDataType.VARCHAR.length(79).nullable(false), this, "");
    /**
     * The column {@code stats.is_battle_only}.
     */
    public final TableField<StatsRecord, Boolean> IS_BATTLE_ONLY =
            createField("is_battle_only", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");
    /**
     * The column {@code stats.game_index}.
     */
    public final TableField<StatsRecord, Integer> GAME_INDEX =
            createField("game_index", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a {@code stats} table reference
     */
    public Stats() {
        this("stats", null);
    }

    private Stats(String alias, Table<StatsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Stats(String alias, Table<StatsRecord> aliased, Field<?>[] parameters) {
        super(alias, DefaultSchema.DEFAULT_SCHEMA, aliased, parameters, "");
    }

    /**
     * Create an aliased {@code stats} table reference
     */
    public Stats(String alias) {
        this(alias, STATS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<StatsRecord> getPrimaryKey() {
        return Keys.PK_STATS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<StatsRecord>> getKeys() {
        return Arrays.<UniqueKey<StatsRecord>>asList(Keys.PK_STATS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<StatsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<StatsRecord, ?>>asList(Keys.FK_STATS_MOVE_DAMAGE_CLASSES_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Stats as(String alias) {
        return new Stats(alias, this);
    }

    /**
     * The class holding records for this type
     */
    @Override
    public Class<StatsRecord> getRecordType() {
        return StatsRecord.class;
    }

    /**
     * Rename this table
     */
    public Stats rename(String name) {
        return new Stats(name, null);
    }
}
