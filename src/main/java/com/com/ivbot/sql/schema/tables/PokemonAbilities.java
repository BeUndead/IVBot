/**
 * This class is generated by jOOQ
 */
package com.com.ivbot.sql.schema.tables;

import com.com.ivbot.sql.schema.DefaultSchema;
import com.com.ivbot.sql.schema.Keys;
import com.com.ivbot.sql.schema.tables.records.PokemonAbilitiesRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;

/**
 * This class is generated by jOOQ.
 */
@Generated (
        value = {
                "http://www.jooq.org", "jOOQ version:3.6.2"},
        comments = "This class is generated by jOOQ")
@SuppressWarnings ({"all", "unchecked", "rawtypes"})
public class PokemonAbilities extends TableImpl<PokemonAbilitiesRecord> {

    /**
     * The reference instance of {@code pokemon_abilities}
     */
    public static final PokemonAbilities POKEMON_ABILITIES = new PokemonAbilities();
    private static final long serialVersionUID = 695729133;
    /**
     * The column {@code pokemon_abilities.pokemon_id}.
     */
    public final TableField<PokemonAbilitiesRecord, Integer> POKEMON_ID =
            createField("pokemon_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");
    /**
     * The column {@code pokemon_abilities.ability_id}.
     */
    public final TableField<PokemonAbilitiesRecord, Integer> ABILITY_ID =
            createField("ability_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");
    /**
     * The column {@code pokemon_abilities.is_hidden}.
     */
    public final TableField<PokemonAbilitiesRecord, Boolean> IS_HIDDEN =
            createField("is_hidden", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");
    /**
     * The column {@code pokemon_abilities.slot}.
     */
    public final TableField<PokemonAbilitiesRecord, Integer> SLOT =
            createField("slot", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a {@code pokemon_abilities} table reference
     */
    public PokemonAbilities() {
        this("pokemon_abilities", null);
    }

    private PokemonAbilities(String alias, Table<PokemonAbilitiesRecord> aliased) {
        this(alias, aliased, null);
    }

    private PokemonAbilities(String alias, Table<PokemonAbilitiesRecord> aliased, Field<?>[] parameters) {
        super(alias, DefaultSchema.DEFAULT_SCHEMA, aliased, parameters, "");
    }

    /**
     * Create an aliased {@code pokemon_abilities} table reference
     */
    public PokemonAbilities(String alias) {
        this(alias, POKEMON_ABILITIES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PokemonAbilitiesRecord> getPrimaryKey() {
        return Keys.PK_POKEMON_ABILITIES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PokemonAbilitiesRecord>> getKeys() {
        return Arrays.<UniqueKey<PokemonAbilitiesRecord>>asList(Keys.PK_POKEMON_ABILITIES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<PokemonAbilitiesRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<PokemonAbilitiesRecord, ?>>asList(Keys.FK_POKEMON_ABILITIES_POKEMON_1,
                                                                    Keys.FK_POKEMON_ABILITIES_ABILITIES_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PokemonAbilities as(String alias) {
        return new PokemonAbilities(alias, this);
    }

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PokemonAbilitiesRecord> getRecordType() {
        return PokemonAbilitiesRecord.class;
    }

    /**
     * Rename this table
     */
    public PokemonAbilities rename(String name) {
        return new PokemonAbilities(name, null);
    }
}
