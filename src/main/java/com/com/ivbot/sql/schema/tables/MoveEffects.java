/**
 * This class is generated by jOOQ
 */
package com.com.ivbot.sql.schema.tables;

import com.com.ivbot.sql.schema.DefaultSchema;
import com.com.ivbot.sql.schema.Keys;
import com.com.ivbot.sql.schema.tables.records.MoveEffectsRecord;
import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;

/**
 * This class is generated by jOOQ.
 */
@Generated (
        value = {
                "http://www.jooq.org", "jOOQ version:3.6.2"},
        comments = "This class is generated by jOOQ")
@SuppressWarnings ({"all", "unchecked", "rawtypes"})
public class MoveEffects extends TableImpl<MoveEffectsRecord> {

    /**
     * The reference instance of {@code move_effects}
     */
    public static final MoveEffects MOVE_EFFECTS = new MoveEffects();
    private static final long serialVersionUID = 1523770850;
    /**
     * The column {@code move_effects.id}.
     */
    public final TableField<MoveEffectsRecord, Integer> ID =
            createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a {@code move_effects} table reference
     */
    public MoveEffects() {
        this("move_effects", null);
    }

    private MoveEffects(String alias, Table<MoveEffectsRecord> aliased) {
        this(alias, aliased, null);
    }

    private MoveEffects(String alias, Table<MoveEffectsRecord> aliased, Field<?>[] parameters) {
        super(alias, DefaultSchema.DEFAULT_SCHEMA, aliased, parameters, "");
    }

    /**
     * Create an aliased {@code move_effects} table reference
     */
    public MoveEffects(String alias) {
        this(alias, MOVE_EFFECTS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MoveEffectsRecord> getPrimaryKey() {
        return Keys.PK_MOVE_EFFECTS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MoveEffectsRecord>> getKeys() {
        return Arrays.<UniqueKey<MoveEffectsRecord>>asList(Keys.PK_MOVE_EFFECTS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MoveEffects as(String alias) {
        return new MoveEffects(alias, this);
    }

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MoveEffectsRecord> getRecordType() {
        return MoveEffectsRecord.class;
    }

    /**
     * Rename this table
     */
    public MoveEffects rename(String name) {
        return new MoveEffects(name, null);
    }
}
