/**
 * This class is generated by jOOQ
 */
package com.com.ivbot.sql.schema.tables;

import com.com.ivbot.sql.schema.DefaultSchema;
import com.com.ivbot.sql.schema.Keys;
import com.com.ivbot.sql.schema.tables.records.MoveMetaAilmentNamesRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;

/**
 * This class is generated by jOOQ.
 */
@Generated (
        value = {
                "http://www.jooq.org", "jOOQ version:3.6.2"},
        comments = "This class is generated by jOOQ")
@SuppressWarnings ({"all", "unchecked", "rawtypes"})
public class MoveMetaAilmentNames extends TableImpl<MoveMetaAilmentNamesRecord> {

    /**
     * The reference instance of {@code move_meta_ailment_names}
     */
    public static final MoveMetaAilmentNames MOVE_META_AILMENT_NAMES = new MoveMetaAilmentNames();
    private static final long serialVersionUID = -1389601905;
    /**
     * The column {@code move_meta_ailment_names.move_meta_ailment_id}.
     */
    public final TableField<MoveMetaAilmentNamesRecord, Integer> MOVE_META_AILMENT_ID =
            createField("move_meta_ailment_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");
    /**
     * The column {@code move_meta_ailment_names.local_language_id}.
     */
    public final TableField<MoveMetaAilmentNamesRecord, Integer> LOCAL_LANGUAGE_ID =
            createField("local_language_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");
    /**
     * The column {@code move_meta_ailment_names.name}.
     */
    public final TableField<MoveMetaAilmentNamesRecord, String> NAME =
            createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(79).nullable(false), this, "");

    /**
     * Create a {@code move_meta_ailment_names} table reference
     */
    public MoveMetaAilmentNames() {
        this("move_meta_ailment_names", null);
    }

    private MoveMetaAilmentNames(String alias, Table<MoveMetaAilmentNamesRecord> aliased) {
        this(alias, aliased, null);
    }

    private MoveMetaAilmentNames(String alias, Table<MoveMetaAilmentNamesRecord> aliased, Field<?>[] parameters) {
        super(alias, DefaultSchema.DEFAULT_SCHEMA, aliased, parameters, "");
    }

    /**
     * Create an aliased {@code move_meta_ailment_names} table reference
     */
    public MoveMetaAilmentNames(String alias) {
        this(alias, MOVE_META_AILMENT_NAMES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MoveMetaAilmentNamesRecord> getPrimaryKey() {
        return Keys.PK_MOVE_META_AILMENT_NAMES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MoveMetaAilmentNamesRecord>> getKeys() {
        return Arrays.<UniqueKey<MoveMetaAilmentNamesRecord>>asList(Keys.PK_MOVE_META_AILMENT_NAMES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<MoveMetaAilmentNamesRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<MoveMetaAilmentNamesRecord, ?>>asList(
                Keys.FK_MOVE_META_AILMENT_NAMES_MOVE_META_AILMENTS_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MoveMetaAilmentNames as(String alias) {
        return new MoveMetaAilmentNames(alias, this);
    }

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MoveMetaAilmentNamesRecord> getRecordType() {
        return MoveMetaAilmentNamesRecord.class;
    }

    /**
     * Rename this table
     */
    public MoveMetaAilmentNames rename(String name) {
        return new MoveMetaAilmentNames(name, null);
    }
}
