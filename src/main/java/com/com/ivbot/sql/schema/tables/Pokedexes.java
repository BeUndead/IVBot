/**
 * This class is generated by jOOQ
 */
package com.com.ivbot.sql.schema.tables;

import com.com.ivbot.sql.schema.DefaultSchema;
import com.com.ivbot.sql.schema.Keys;
import com.com.ivbot.sql.schema.tables.records.PokedexesRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;

/**
 * This class is generated by jOOQ.
 */
@Generated (
        value = {
                "http://www.jooq.org", "jOOQ version:3.6.2"},
        comments = "This class is generated by jOOQ")
@SuppressWarnings ({"all", "unchecked", "rawtypes"})
public class Pokedexes extends TableImpl<PokedexesRecord> {

    /**
     * The reference instance of {@code pokedexes}
     */
    public static final Pokedexes POKEDEXES = new Pokedexes();
    private static final long serialVersionUID = -1687165070;
    /**
     * The column {@code pokedexes.id}.
     */
    public final TableField<PokedexesRecord, Integer> ID =
            createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");
    /**
     * The column {@code pokedexes.region_id}.
     */
    public final TableField<PokedexesRecord, Integer> REGION_ID =
            createField("region_id", org.jooq.impl.SQLDataType.INTEGER, this, "");
    /**
     * The column {@code pokedexes.identifier}.
     */
    public final TableField<PokedexesRecord, String> IDENTIFIER =
            createField("identifier", org.jooq.impl.SQLDataType.VARCHAR.length(79).nullable(false), this, "");
    /**
     * The column {@code pokedexes.is_main_series}.
     */
    public final TableField<PokedexesRecord, Boolean> IS_MAIN_SERIES =
            createField("is_main_series", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * Create a {@code pokedexes} table reference
     */
    public Pokedexes() {
        this("pokedexes", null);
    }

    private Pokedexes(String alias, Table<PokedexesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Pokedexes(String alias, Table<PokedexesRecord> aliased, Field<?>[] parameters) {
        super(alias, DefaultSchema.DEFAULT_SCHEMA, aliased, parameters, "");
    }

    /**
     * Create an aliased {@code pokedexes} table reference
     */
    public Pokedexes(String alias) {
        this(alias, POKEDEXES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PokedexesRecord> getPrimaryKey() {
        return Keys.PK_POKEDEXES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PokedexesRecord>> getKeys() {
        return Arrays.<UniqueKey<PokedexesRecord>>asList(Keys.PK_POKEDEXES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<PokedexesRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<PokedexesRecord, ?>>asList(Keys.FK_POKEDEXES_REGIONS_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Pokedexes as(String alias) {
        return new Pokedexes(alias, this);
    }

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PokedexesRecord> getRecordType() {
        return PokedexesRecord.class;
    }

    /**
     * Rename this table
     */
    public Pokedexes rename(String name) {
        return new Pokedexes(name, null);
    }
}
