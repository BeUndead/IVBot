/**
 * This class is generated by jOOQ
 */
package com.com.ivbot.sql.schema.tables.records;

import com.com.ivbot.sql.schema.tables.ItemFlags;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;

import javax.annotation.Generated;

/**
 * This class is generated by jOOQ.
 */
@Generated (
        value = {
                "http://www.jooq.org", "jOOQ version:3.6.2"},
        comments = "This class is generated by jOOQ")
@SuppressWarnings ({"all", "unchecked", "rawtypes"})
public class ItemFlagsRecord extends UpdatableRecordImpl<ItemFlagsRecord> implements Record2<Integer, String> {

    private static final long serialVersionUID = -528142643;

    /**
     * Create a detached ItemFlagsRecord
     */
    public ItemFlagsRecord() {
        super(ItemFlags.ITEM_FLAGS);
    }

    /**
     * Create a detached, initialised ItemFlagsRecord
     */
    public ItemFlagsRecord(Integer id, String identifier) {
        super(ItemFlags.ITEM_FLAGS);

        setValue(0, id);
        setValue(1, identifier);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Integer, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Integer, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return ItemFlags.ITEM_FLAGS.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return ItemFlags.ITEM_FLAGS.IDENTIFIER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * Getter for {@code item_flags.id}.
     */
    public Integer getId() {
        return (Integer) getValue(0);
    }

    /**
     * Setter for {@code item_flags.id}.
     */
    public void setId(Integer value) {
        setValue(0, value);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getIdentifier();
    }

    /**
     * Getter for {@code item_flags.identifier}.
     */
    public String getIdentifier() {
        return (String) getValue(1);
    }

    /**
     * Setter for {@code item_flags.identifier}.
     */
    public void setIdentifier(String value) {
        setValue(1, value);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ItemFlagsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public ItemFlagsRecord value2(String value) {
        setIdentifier(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ItemFlagsRecord values(Integer value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }
}
