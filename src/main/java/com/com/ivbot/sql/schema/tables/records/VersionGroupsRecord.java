/**
 * This class is generated by jOOQ
 */
package com.com.ivbot.sql.schema.tables.records;

import com.com.ivbot.sql.schema.tables.VersionGroups;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;

import javax.annotation.Generated;

/**
 * This class is generated by jOOQ.
 */
@Generated (
        value = {
                "http://www.jooq.org", "jOOQ version:3.6.2"},
        comments = "This class is generated by jOOQ")
@SuppressWarnings ({"all", "unchecked", "rawtypes"})
public class VersionGroupsRecord extends UpdatableRecordImpl<VersionGroupsRecord>
        implements Record5<Integer, String, Integer, Integer, Integer> {

    private static final long serialVersionUID = 1233508906;

    /**
     * Create a detached VersionGroupsRecord
     */
    public VersionGroupsRecord() {
        super(VersionGroups.VERSION_GROUPS);
    }

    /**
     * Create a detached, initialised VersionGroupsRecord
     */
    public VersionGroupsRecord(Integer id, String identifier, Integer generationId, Integer order,
                               Integer preferenceOrder) {
        super(VersionGroups.VERSION_GROUPS);

        setValue(0, id);
        setValue(1, identifier);
        setValue(2, generationId);
        setValue(3, order);
        setValue(4, preferenceOrder);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, String, Integer, Integer, Integer> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, String, Integer, Integer, Integer> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return VersionGroups.VERSION_GROUPS.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return VersionGroups.VERSION_GROUPS.IDENTIFIER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return VersionGroups.VERSION_GROUPS.GENERATION_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return VersionGroups.VERSION_GROUPS.ORDER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field5() {
        return VersionGroups.VERSION_GROUPS.PREFERENCE_ORDER;
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * Getter for {@code version_groups.id}.
     */
    public Integer getId() {
        return (Integer) getValue(0);
    }

    /**
     * Setter for {@code version_groups.id}.
     */
    public void setId(Integer value) {
        setValue(0, value);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getIdentifier();
    }

    /**
     * Getter for {@code version_groups.identifier}.
     */
    public String getIdentifier() {
        return (String) getValue(1);
    }

    /**
     * Setter for {@code version_groups.identifier}.
     */
    public void setIdentifier(String value) {
        setValue(1, value);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getGenerationId();
    }

    /**
     * Getter for {@code version_groups.generation_id}.
     */
    public Integer getGenerationId() {
        return (Integer) getValue(2);
    }

    /**
     * Setter for {@code version_groups.generation_id}.
     */
    public void setGenerationId(Integer value) {
        setValue(2, value);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getOrder();
    }

    /**
     * Getter for {@code version_groups.order}.
     */
    public Integer getOrder() {
        return (Integer) getValue(3);
    }

    /**
     * Setter for {@code version_groups.order}.
     */
    public void setOrder(Integer value) {
        setValue(3, value);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value5() {
        return getPreferenceOrder();
    }

    /**
     * Getter for {@code version_groups.preference_order}.
     */
    public Integer getPreferenceOrder() {
        return (Integer) getValue(4);
    }

    /**
     * Setter for {@code version_groups.preference_order}.
     */
    public void setPreferenceOrder(Integer value) {
        setValue(4, value);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VersionGroupsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VersionGroupsRecord value2(String value) {
        setIdentifier(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VersionGroupsRecord value3(Integer value) {
        setGenerationId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VersionGroupsRecord value4(Integer value) {
        setOrder(value);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public VersionGroupsRecord value5(Integer value) {
        setPreferenceOrder(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VersionGroupsRecord values(Integer value1, String value2, Integer value3, Integer value4, Integer value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }
}
