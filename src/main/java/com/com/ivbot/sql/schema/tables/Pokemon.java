/**
 * This class is generated by jOOQ
 */
package com.com.ivbot.sql.schema.tables;

import com.com.ivbot.sql.schema.DefaultSchema;
import com.com.ivbot.sql.schema.Keys;
import com.com.ivbot.sql.schema.tables.records.PokemonRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;

/**
 * This class is generated by jOOQ.
 */
@Generated (
        value = {
                "http://www.jooq.org", "jOOQ version:3.6.2"},
        comments = "This class is generated by jOOQ")
@SuppressWarnings ({"all", "unchecked", "rawtypes"})
public class Pokemon extends TableImpl<PokemonRecord> {

    /**
     * The reference instance of {@code pokemon}
     */
    public static final Pokemon POKEMON = new Pokemon();
    private static final long serialVersionUID = 2129586234;
    /**
     * The column {@code pokemon.id}.
     */
    public final TableField<PokemonRecord, Integer> ID =
            createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");
    /**
     * The column {@code pokemon.identifier}.
     */
    public final TableField<PokemonRecord, String> IDENTIFIER =
            createField("identifier", org.jooq.impl.SQLDataType.VARCHAR.length(79).nullable(false), this, "");
    /**
     * The column {@code pokemon.species_id}.
     */
    public final TableField<PokemonRecord, Integer> SPECIES_ID =
            createField("species_id", org.jooq.impl.SQLDataType.INTEGER, this, "");
    /**
     * The column {@code pokemon.height}.
     */
    public final TableField<PokemonRecord, Integer> HEIGHT =
            createField("height", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");
    /**
     * The column {@code pokemon.weight}.
     */
    public final TableField<PokemonRecord, Integer> WEIGHT =
            createField("weight", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");
    /**
     * The column {@code pokemon.base_experience}.
     */
    public final TableField<PokemonRecord, Integer> BASE_EXPERIENCE =
            createField("base_experience", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");
    /**
     * The column {@code pokemon.species_order}.
     */
    public final TableField<PokemonRecord, Integer> SPECIES_ORDER =
            createField("species_order", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");
    /**
     * The column {@code pokemon.is_default}.
     */
    public final TableField<PokemonRecord, Boolean> IS_DEFAULT =
            createField("is_default", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * Create a {@code pokemon} table reference
     */
    public Pokemon() {
        this("pokemon", null);
    }

    private Pokemon(String alias, Table<PokemonRecord> aliased) {
        this(alias, aliased, null);
    }

    private Pokemon(String alias, Table<PokemonRecord> aliased, Field<?>[] parameters) {
        super(alias, DefaultSchema.DEFAULT_SCHEMA, aliased, parameters, "");
    }

    /**
     * Create an aliased {@code pokemon} table reference
     */
    public Pokemon(String alias) {
        this(alias, POKEMON);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PokemonRecord> getPrimaryKey() {
        return Keys.PK_POKEMON;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PokemonRecord>> getKeys() {
        return Arrays.<UniqueKey<PokemonRecord>>asList(Keys.PK_POKEMON);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<PokemonRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<PokemonRecord, ?>>asList(Keys.FK_POKEMON_POKEMON_SPECIES_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Pokemon as(String alias) {
        return new Pokemon(alias, this);
    }

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PokemonRecord> getRecordType() {
        return PokemonRecord.class;
    }

    /**
     * Rename this table
     */
    public Pokemon rename(String name) {
        return new Pokemon(name, null);
    }
}
