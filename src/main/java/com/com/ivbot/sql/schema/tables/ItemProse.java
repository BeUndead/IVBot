/**
 * This class is generated by jOOQ
 */
package com.com.ivbot.sql.schema.tables;

import com.com.ivbot.sql.schema.DefaultSchema;
import com.com.ivbot.sql.schema.Keys;
import com.com.ivbot.sql.schema.tables.records.ItemProseRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;

/**
 * This class is generated by jOOQ.
 */
@Generated (
        value = {
                "http://www.jooq.org", "jOOQ version:3.6.2"},
        comments = "This class is generated by jOOQ")
@SuppressWarnings ({"all", "unchecked", "rawtypes"})
public class ItemProse extends TableImpl<ItemProseRecord> {

    /**
     * The reference instance of {@code item_prose}
     */
    public static final ItemProse ITEM_PROSE = new ItemProse();
    private static final long serialVersionUID = -1044962868;
    /**
     * The column {@code item_prose.item_id}.
     */
    public final TableField<ItemProseRecord, Integer> ITEM_ID =
            createField("item_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");
    /**
     * The column {@code item_prose.local_language_id}.
     */
    public final TableField<ItemProseRecord, Integer> LOCAL_LANGUAGE_ID =
            createField("local_language_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");
    /**
     * The column {@code item_prose.short_effect}.
     */
    public final TableField<ItemProseRecord, String> SHORT_EFFECT =
            createField("short_effect", org.jooq.impl.SQLDataType.CLOB, this, "");
    /**
     * The column {@code item_prose.effect}.
     */
    public final TableField<ItemProseRecord, String> EFFECT =
            createField("effect", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a {@code item_prose} table reference
     */
    public ItemProse() {
        this("item_prose", null);
    }

    private ItemProse(String alias, Table<ItemProseRecord> aliased) {
        this(alias, aliased, null);
    }

    private ItemProse(String alias, Table<ItemProseRecord> aliased, Field<?>[] parameters) {
        super(alias, DefaultSchema.DEFAULT_SCHEMA, aliased, parameters, "");
    }

    /**
     * Create an aliased {@code item_prose} table reference
     */
    public ItemProse(String alias) {
        this(alias, ITEM_PROSE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ItemProseRecord> getPrimaryKey() {
        return Keys.PK_ITEM_PROSE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ItemProseRecord>> getKeys() {
        return Arrays.<UniqueKey<ItemProseRecord>>asList(Keys.PK_ITEM_PROSE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ItemProseRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ItemProseRecord, ?>>asList(Keys.FK_ITEM_PROSE_ITEMS_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ItemProse as(String alias) {
        return new ItemProse(alias, this);
    }

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ItemProseRecord> getRecordType() {
        return ItemProseRecord.class;
    }

    /**
     * Rename this table
     */
    public ItemProse rename(String name) {
        return new ItemProse(name, null);
    }
}
