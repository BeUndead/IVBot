/**
 * This class is generated by jOOQ
 */
package com.com.ivbot.sql.schema.tables;

import com.com.ivbot.sql.schema.DefaultSchema;
import com.com.ivbot.sql.schema.Keys;
import com.com.ivbot.sql.schema.tables.records.TypeGameIndicesRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;

/**
 * This class is generated by jOOQ.
 */
@Generated (
        value = {
                "http://www.jooq.org", "jOOQ version:3.6.2"},
        comments = "This class is generated by jOOQ")
@SuppressWarnings ({"all", "unchecked", "rawtypes"})
public class TypeGameIndices extends TableImpl<TypeGameIndicesRecord> {

    /**
     * The reference instance of {@code type_game_indices}
     */
    public static final TypeGameIndices TYPE_GAME_INDICES = new TypeGameIndices();
    private static final long serialVersionUID = -1161410068;
    /**
     * The column {@code type_game_indices.type_id}.
     */
    public final TableField<TypeGameIndicesRecord, Integer> TYPE_ID =
            createField("type_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");
    /**
     * The column {@code type_game_indices.generation_id}.
     */
    public final TableField<TypeGameIndicesRecord, Integer> GENERATION_ID =
            createField("generation_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");
    /**
     * The column {@code type_game_indices.game_index}.
     */
    public final TableField<TypeGameIndicesRecord, Integer> GAME_INDEX =
            createField("game_index", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a {@code type_game_indices} table reference
     */
    public TypeGameIndices() {
        this("type_game_indices", null);
    }

    private TypeGameIndices(String alias, Table<TypeGameIndicesRecord> aliased) {
        this(alias, aliased, null);
    }

    private TypeGameIndices(String alias, Table<TypeGameIndicesRecord> aliased, Field<?>[] parameters) {
        super(alias, DefaultSchema.DEFAULT_SCHEMA, aliased, parameters, "");
    }

    /**
     * Create an aliased {@code type_game_indices} table reference
     */
    public TypeGameIndices(String alias) {
        this(alias, TYPE_GAME_INDICES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TypeGameIndicesRecord> getPrimaryKey() {
        return Keys.PK_TYPE_GAME_INDICES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TypeGameIndicesRecord>> getKeys() {
        return Arrays.<UniqueKey<TypeGameIndicesRecord>>asList(Keys.PK_TYPE_GAME_INDICES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<TypeGameIndicesRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<TypeGameIndicesRecord, ?>>asList(Keys.FK_TYPE_GAME_INDICES_TYPES_1,
                                                                   Keys.FK_TYPE_GAME_INDICES_GENERATIONS_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TypeGameIndices as(String alias) {
        return new TypeGameIndices(alias, this);
    }

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TypeGameIndicesRecord> getRecordType() {
        return TypeGameIndicesRecord.class;
    }

    /**
     * Rename this table
     */
    public TypeGameIndices rename(String name) {
        return new TypeGameIndices(name, null);
    }
}
