/**
 * This class is generated by jOOQ
 */
package com.com.ivbot.sql.schema.tables;

import com.com.ivbot.sql.schema.DefaultSchema;
import com.com.ivbot.sql.schema.Keys;
import com.com.ivbot.sql.schema.tables.records.AbilitiesRecord;
import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;

/**
 * This class is generated by jOOQ.
 */
@Generated (
        value = {
                "http://www.jooq.org", "jOOQ version:3.6.2"},
        comments = "This class is generated by jOOQ")
@SuppressWarnings ({"all", "unchecked", "rawtypes"})
public class Abilities extends TableImpl<AbilitiesRecord> {

    /**
     * The reference instance of <code>abilities</code>
     */
    public static final Abilities ABILITIES = new Abilities();
    private static final long serialVersionUID = 1081150466;
    /**
     * The column <code>abilities.id</code>.
     */
    public final TableField<AbilitiesRecord, Integer> ID =
            createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");
    /**
     * The column <code>abilities.identifier</code>.
     */
    public final TableField<AbilitiesRecord, String> IDENTIFIER =
            createField("identifier", org.jooq.impl.SQLDataType.VARCHAR.length(12), this, "");
    /**
     * The column <code>abilities.generation_id</code>.
     */
    public final TableField<AbilitiesRecord, Integer> GENERATION_ID =
            createField("generation_id", org.jooq.impl.SQLDataType.INTEGER, this, "");
    /**
     * The column <code>abilities.is_main_series</code>.
     */
    public final TableField<AbilitiesRecord, Integer> IS_MAIN_SERIES =
            createField("is_main_series", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>abilities</code> table reference
     */
    public Abilities() {
        this("abilities", null);
    }

    private Abilities(String alias, Table<AbilitiesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Abilities(String alias, Table<AbilitiesRecord> aliased, Field<?>[] parameters) {
        super(alias, DefaultSchema.DEFAULT_SCHEMA, aliased, parameters, "");
    }

    /**
     * Create an aliased <code>abilities</code> table reference
     */
    public Abilities(String alias) {
        this(alias, ABILITIES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AbilitiesRecord> getPrimaryKey() {
        return Keys.PK_ABILITIES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AbilitiesRecord>> getKeys() {
        return Arrays.<UniqueKey<AbilitiesRecord>>asList(Keys.PK_ABILITIES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Abilities as(String alias) {
        return new Abilities(alias, this);
    }

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AbilitiesRecord> getRecordType() {
        return AbilitiesRecord.class;
    }

    /**
     * Rename this table
     */
    public Abilities rename(String name) {
        return new Abilities(name, null);
    }
}
